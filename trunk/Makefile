# Makefile.in generated by automake 1.12.1 from Makefile.am.
# Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994-2012 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.




am__make_dryrun = \
  { \
    am__dry=no; \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        echo 'am--echo: ; @echo "AM"  OK' | $(MAKE) -f - 2>/dev/null \
          | grep '^AM OK$$' >/dev/null || am__dry=yes;; \
      *) \
        for am__flg in $$MAKEFLAGS; do \
          case $$am__flg in \
            *=*|--*) ;; \
            *n*) am__dry=yes; break;; \
          esac; \
        done;; \
    esac; \
    test $$am__dry = yes; \
  }
pkgdatadir = $(datadir)/dlputils
pkgincludedir = $(includedir)/dlputils
pkglibdir = $(libdir)/dlputils
pkglibexecdir = $(libexecdir)/dlputils
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = x86_64-suse-linux-gnu
host_triplet = x86_64-suse-linux-gnu
target_triplet = x86_64-suse-linux-gnu
bin_PROGRAMS = dlp2xyzf$(EXEEXT) catdlp$(EXEEXT) dlp2dlp$(EXEEXT) \
	addheader$(EXEEXT) editconfig$(EXEEXT) filterdlp$(EXEEXT) \
	his2config$(EXEEXT) his2xyzs$(EXEEXT) dlp2dlpflipz$(EXEEXT) \
	dlp2dlpshift$(EXEEXT) dlpreorder$(EXEEXT) chunkdlp$(EXEEXT) \
	xyz2his$(EXEEXT) cdf$(EXEEXT) dist2$(EXEEXT) rdf$(EXEEXT) \
	rdfsum$(EXEEXT) rdfaa$(EXEEXT) rdfaainter$(EXEEXT) \
	rdfss$(EXEEXT) zdens$(EXEEXT) acfcat$(EXEEXT) acfprep$(EXEEXT) \
	acfsum$(EXEEXT) angle$(EXEEXT) cagecor2$(EXEEXT) cn$(EXEEXT) \
	counthb$(EXEEXT) dlpgeom$(EXEEXT) getcell$(EXEEXT) \
	intertorsion$(EXEEXT) intratorsion$(EXEEXT) lifehb$(EXEEXT) \
	moldist$(EXEEXT) msd$(EXEEXT) msd2$(EXEEXT) vac$(EXEEXT) \
	vac2$(EXEEXT) bident$(EXEEXT) bident2$(EXEEXT) \
	bident2anal$(EXEEXT) bident3$(EXEEXT) bident4$(EXEEXT) \
	cluster$(EXEEXT) cryscomp$(EXEEXT) dahist$(EXEEXT) \
	legendre$(EXEEXT) zangle$(EXEEXT) glucanal$(EXEEXT) \
	glucgeom$(EXEEXT) gluchb$(EXEEXT) gluchbeach$(EXEEXT) \
	glucsphere$(EXEEXT) pdens$(EXEEXT) pdensint$(EXEEXT) \
	pdensmirror$(EXEEXT) pdenstrim$(EXEEXT) avgconfig$(EXEEXT) \
	dlpsize$(EXEEXT) genlb$(EXEEXT) gengg$(EXEEXT) pairs$(EXEEXT) \
	probedlp$(EXEEXT) acf$(EXEEXT) dacf$(EXEEXT) sq$(EXEEXT) \
	totalgr$(EXEEXT)
subdir = .
DIST_COMMON = README $(am__configure_deps) $(srcdir)/Makefile.am \
	$(srcdir)/Makefile.in $(srcdir)/config.h.in \
	$(top_srcdir)/config/config.guess \
	$(top_srcdir)/config/config.sub \
	$(top_srcdir)/config/install-sh $(top_srcdir)/config/ltmain.sh \
	$(top_srcdir)/config/missing $(top_srcdir)/configure AUTHORS \
	COPYING ChangeLog INSTALL NEWS config/config.guess \
	config/config.sub config/install-sh config/ltmain.sh \
	config/missing
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
am__CONFIG_DISTCLEAN_FILES = config.status config.cache config.log \
 configure.lineno config.status.lineno
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
am__installdirs = "$(DESTDIR)$(bindir)"
PROGRAMS = $(bin_PROGRAMS)
am__objects_1 = acf-parse.$(OBJEXT)
am__objects_2 = acf-dlprw.$(OBJEXT)
am__objects_3 = acf-utility.$(OBJEXT)
am_acf_OBJECTS = $(am__objects_1) $(am__objects_2) $(am__objects_3) \
	acf-acf.$(OBJEXT)
acf_OBJECTS = $(am_acf_OBJECTS)
acf_LDADD = $(LDADD)
acf_LINK = $(LIBTOOL) --tag=FC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(FCLD) $(acf_FCFLAGS) $(FCFLAGS) $(acf_LDFLAGS) \
	$(LDFLAGS) -o $@
am__objects_4 = parse.$(OBJEXT)
am__objects_5 = dlprw.$(OBJEXT)
am__objects_6 = utility.$(OBJEXT)
am_acfcat_OBJECTS = $(am__objects_4) $(am__objects_5) $(am__objects_6) \
	acfcat.$(OBJEXT)
acfcat_OBJECTS = $(am_acfcat_OBJECTS)
acfcat_LDADD = $(LDADD)
am_acfprep_OBJECTS = $(am__objects_4) $(am__objects_5) \
	$(am__objects_6) acfprep.$(OBJEXT)
acfprep_OBJECTS = $(am_acfprep_OBJECTS)
acfprep_LDADD = $(LDADD)
am_acfsum_OBJECTS = $(am__objects_4) $(am__objects_5) $(am__objects_6) \
	acfsum.$(OBJEXT)
acfsum_OBJECTS = $(am_acfsum_OBJECTS)
acfsum_LDADD = $(LDADD)
am_addheader_OBJECTS = $(am__objects_4) $(am__objects_5) \
	addheader.$(OBJEXT)
addheader_OBJECTS = $(am_addheader_OBJECTS)
addheader_LDADD = $(LDADD)
am_angle_OBJECTS = $(am__objects_4) $(am__objects_5) $(am__objects_6) \
	angle.$(OBJEXT)
angle_OBJECTS = $(am_angle_OBJECTS)
angle_LDADD = $(LDADD)
am_avgconfig_OBJECTS = $(am__objects_4) $(am__objects_5) \
	$(am__objects_6) avgconfig.$(OBJEXT)
avgconfig_OBJECTS = $(am_avgconfig_OBJECTS)
avgconfig_LDADD = $(LDADD)
am_bident_OBJECTS = $(am__objects_4) $(am__objects_5) $(am__objects_6) \
	bident.$(OBJEXT)
bident_OBJECTS = $(am_bident_OBJECTS)
bident_LDADD = $(LDADD)
am_bident2_OBJECTS = $(am__objects_4) $(am__objects_5) \
	$(am__objects_6) bident2.$(OBJEXT)
bident2_OBJECTS = $(am_bident2_OBJECTS)
bident2_LDADD = $(LDADD)
am_bident2anal_OBJECTS = $(am__objects_4) $(am__objects_5) \
	$(am__objects_6) bident2anal.$(OBJEXT)
bident2anal_OBJECTS = $(am_bident2anal_OBJECTS)
bident2anal_LDADD = $(LDADD)
am_bident3_OBJECTS = $(am__objects_4) $(am__objects_5) \
	$(am__objects_6) bident3.$(OBJEXT)
bident3_OBJECTS = $(am_bident3_OBJECTS)
bident3_LDADD = $(LDADD)
am_bident4_OBJECTS = $(am__objects_4) $(am__objects_5) \
	$(am__objects_6) bident4.$(OBJEXT)
bident4_OBJECTS = $(am_bident4_OBJECTS)
bident4_LDADD = $(LDADD)
am_cagecor2_OBJECTS = $(am__objects_4) $(am__objects_5) \
	$(am__objects_6) cagecor2.$(OBJEXT)
cagecor2_OBJECTS = $(am_cagecor2_OBJECTS)
cagecor2_LDADD = $(LDADD)
am_catdlp_OBJECTS = $(am__objects_4) $(am__objects_5) catdlp.$(OBJEXT)
catdlp_OBJECTS = $(am_catdlp_OBJECTS)
catdlp_LDADD = $(LDADD)
am_cdf_OBJECTS = $(am__objects_4) $(am__objects_5) $(am__objects_6) \
	cdf.$(OBJEXT)
cdf_OBJECTS = $(am_cdf_OBJECTS)
cdf_LDADD = $(LDADD)
am_chunkdlp_OBJECTS = $(am__objects_4) $(am__objects_5) \
	chunkdlp.$(OBJEXT)
chunkdlp_OBJECTS = $(am_chunkdlp_OBJECTS)
chunkdlp_LDADD = $(LDADD)
am_cluster_OBJECTS = $(am__objects_4) $(am__objects_5) \
	$(am__objects_6) cluster.$(OBJEXT)
cluster_OBJECTS = $(am_cluster_OBJECTS)
cluster_LDADD = $(LDADD)
am_cn_OBJECTS = $(am__objects_4) $(am__objects_5) $(am__objects_6) \
	cn.$(OBJEXT)
cn_OBJECTS = $(am_cn_OBJECTS)
cn_LDADD = $(LDADD)
am_counthb_OBJECTS = $(am__objects_4) $(am__objects_5) \
	$(am__objects_6) counthb.$(OBJEXT)
counthb_OBJECTS = $(am_counthb_OBJECTS)
counthb_LDADD = $(LDADD)
am_cryscomp_OBJECTS = $(am__objects_4) $(am__objects_5) \
	$(am__objects_6) cryscomp.$(OBJEXT)
cryscomp_OBJECTS = $(am_cryscomp_OBJECTS)
cryscomp_LDADD = $(LDADD)
am__objects_7 = dacf-parse.$(OBJEXT)
am__objects_8 = dacf-dlprw.$(OBJEXT)
am__objects_9 = dacf-utility.$(OBJEXT)
am_dacf_OBJECTS = $(am__objects_7) $(am__objects_8) $(am__objects_9) \
	dacf-dacf.$(OBJEXT)
dacf_OBJECTS = $(am_dacf_OBJECTS)
dacf_LDADD = $(LDADD)
dacf_LINK = $(LIBTOOL) --tag=FC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(FCLD) $(dacf_FCFLAGS) $(FCFLAGS) $(dacf_LDFLAGS) \
	$(LDFLAGS) -o $@
am_dahist_OBJECTS = $(am__objects_4) $(am__objects_5) $(am__objects_6) \
	dahist.$(OBJEXT)
dahist_OBJECTS = $(am_dahist_OBJECTS)
dahist_LDADD = $(LDADD)
am_dist2_OBJECTS = $(am__objects_4) $(am__objects_5) $(am__objects_6) \
	dist2.$(OBJEXT)
dist2_OBJECTS = $(am_dist2_OBJECTS)
dist2_LDADD = $(LDADD)
am_dlp2dlp_OBJECTS = $(am__objects_4) $(am__objects_5) \
	dlp2dlp.$(OBJEXT)
dlp2dlp_OBJECTS = $(am_dlp2dlp_OBJECTS)
dlp2dlp_LDADD = $(LDADD)
am_dlp2dlpflipz_OBJECTS = $(am__objects_4) $(am__objects_5) \
	dlp2dlpflipz.$(OBJEXT)
dlp2dlpflipz_OBJECTS = $(am_dlp2dlpflipz_OBJECTS)
dlp2dlpflipz_LDADD = $(LDADD)
am_dlp2dlpshift_OBJECTS = $(am__objects_4) $(am__objects_5) \
	dlp2dlpshift.$(OBJEXT)
dlp2dlpshift_OBJECTS = $(am_dlp2dlpshift_OBJECTS)
dlp2dlpshift_LDADD = $(LDADD)
am_dlp2xyzf_OBJECTS = $(am__objects_4) $(am__objects_5) \
	dlp2xyzf.$(OBJEXT)
dlp2xyzf_OBJECTS = $(am_dlp2xyzf_OBJECTS)
dlp2xyzf_LDADD = $(LDADD)
am_dlpgeom_OBJECTS = $(am__objects_4) $(am__objects_5) \
	$(am__objects_6) dlpgeom.$(OBJEXT)
dlpgeom_OBJECTS = $(am_dlpgeom_OBJECTS)
dlpgeom_LDADD = $(LDADD)
am_dlpreorder_OBJECTS = $(am__objects_4) $(am__objects_5) \
	dlpreorder.$(OBJEXT)
dlpreorder_OBJECTS = $(am_dlpreorder_OBJECTS)
dlpreorder_LDADD = $(LDADD)
am_dlpsize_OBJECTS = $(am__objects_4) $(am__objects_5) \
	$(am__objects_6) dlpsize.$(OBJEXT)
dlpsize_OBJECTS = $(am_dlpsize_OBJECTS)
dlpsize_LDADD = $(LDADD)
am_editconfig_OBJECTS = $(am__objects_4) $(am__objects_5) \
	editconfig.$(OBJEXT)
editconfig_OBJECTS = $(am_editconfig_OBJECTS)
editconfig_LDADD = $(LDADD)
am_filterdlp_OBJECTS = $(am__objects_4) $(am__objects_5) \
	filterdlp.$(OBJEXT)
filterdlp_OBJECTS = $(am_filterdlp_OBJECTS)
filterdlp_LDADD = $(LDADD)
am_gengg_OBJECTS = $(am__objects_4) gengg.$(OBJEXT)
gengg_OBJECTS = $(am_gengg_OBJECTS)
gengg_LDADD = $(LDADD)
am_genlb_OBJECTS = $(am__objects_4) genlb.$(OBJEXT)
genlb_OBJECTS = $(am_genlb_OBJECTS)
genlb_LDADD = $(LDADD)
am_getcell_OBJECTS = $(am__objects_4) $(am__objects_5) \
	$(am__objects_6) getcell.$(OBJEXT)
getcell_OBJECTS = $(am_getcell_OBJECTS)
getcell_LDADD = $(LDADD)
am_glucanal_OBJECTS = $(am__objects_4) $(am__objects_5) \
	$(am__objects_6) glucanal.$(OBJEXT)
glucanal_OBJECTS = $(am_glucanal_OBJECTS)
glucanal_LDADD = $(LDADD)
am_glucgeom_OBJECTS = $(am__objects_4) $(am__objects_5) \
	$(am__objects_6) glucgeom.$(OBJEXT)
glucgeom_OBJECTS = $(am_glucgeom_OBJECTS)
glucgeom_LDADD = $(LDADD)
am_gluchb_OBJECTS = $(am__objects_4) $(am__objects_5) $(am__objects_6) \
	gluchb.$(OBJEXT)
gluchb_OBJECTS = $(am_gluchb_OBJECTS)
gluchb_LDADD = $(LDADD)
am_gluchbeach_OBJECTS = $(am__objects_4) $(am__objects_5) \
	$(am__objects_6) gluchbeach.$(OBJEXT)
gluchbeach_OBJECTS = $(am_gluchbeach_OBJECTS)
gluchbeach_LDADD = $(LDADD)
am_glucsphere_OBJECTS = $(am__objects_4) $(am__objects_5) \
	$(am__objects_6) glucsphere.$(OBJEXT)
glucsphere_OBJECTS = $(am_glucsphere_OBJECTS)
glucsphere_LDADD = $(LDADD)
am_his2config_OBJECTS = $(am__objects_4) $(am__objects_5) \
	his2config.$(OBJEXT)
his2config_OBJECTS = $(am_his2config_OBJECTS)
his2config_LDADD = $(LDADD)
am_his2xyzs_OBJECTS = $(am__objects_4) $(am__objects_5) \
	his2xyzs.$(OBJEXT)
his2xyzs_OBJECTS = $(am_his2xyzs_OBJECTS)
his2xyzs_LDADD = $(LDADD)
am_intertorsion_OBJECTS = $(am__objects_4) $(am__objects_5) \
	$(am__objects_6) intertorsion.$(OBJEXT)
intertorsion_OBJECTS = $(am_intertorsion_OBJECTS)
intertorsion_LDADD = $(LDADD)
am_intratorsion_OBJECTS = $(am__objects_4) $(am__objects_5) \
	$(am__objects_6) intratorsion.$(OBJEXT)
intratorsion_OBJECTS = $(am_intratorsion_OBJECTS)
intratorsion_LDADD = $(LDADD)
am_legendre_OBJECTS = $(am__objects_4) $(am__objects_5) \
	$(am__objects_6) legendre.$(OBJEXT)
legendre_OBJECTS = $(am_legendre_OBJECTS)
legendre_LDADD = $(LDADD)
am_lifehb_OBJECTS = $(am__objects_4) $(am__objects_5) $(am__objects_6) \
	lifehb.$(OBJEXT)
lifehb_OBJECTS = $(am_lifehb_OBJECTS)
lifehb_LDADD = $(LDADD)
am_moldist_OBJECTS = $(am__objects_4) $(am__objects_5) \
	$(am__objects_6) moldist.$(OBJEXT)
moldist_OBJECTS = $(am_moldist_OBJECTS)
moldist_LDADD = $(LDADD)
am_msd_OBJECTS = $(am__objects_4) $(am__objects_5) $(am__objects_6) \
	msd.$(OBJEXT)
msd_OBJECTS = $(am_msd_OBJECTS)
msd_LDADD = $(LDADD)
am_msd2_OBJECTS = $(am__objects_4) $(am__objects_5) $(am__objects_6) \
	msd2.$(OBJEXT)
msd2_OBJECTS = $(am_msd2_OBJECTS)
msd2_LDADD = $(LDADD)
am_pairs_OBJECTS = $(am__objects_4) $(am__objects_5) $(am__objects_6) \
	pairs.$(OBJEXT)
pairs_OBJECTS = $(am_pairs_OBJECTS)
pairs_LDADD = $(LDADD)
am_pdens_OBJECTS = $(am__objects_4) $(am__objects_5) $(am__objects_6) \
	pdens.$(OBJEXT)
pdens_OBJECTS = $(am_pdens_OBJECTS)
pdens_LDADD = $(LDADD)
am_pdensint_OBJECTS = $(am__objects_4) $(am__objects_5) \
	$(am__objects_6) pdensint.$(OBJEXT)
pdensint_OBJECTS = $(am_pdensint_OBJECTS)
pdensint_LDADD = $(LDADD)
am_pdensmirror_OBJECTS = $(am__objects_4) $(am__objects_5) \
	$(am__objects_6) pdensmirror.$(OBJEXT)
pdensmirror_OBJECTS = $(am_pdensmirror_OBJECTS)
pdensmirror_LDADD = $(LDADD)
am_pdenstrim_OBJECTS = $(am__objects_4) $(am__objects_5) \
	$(am__objects_6) pdenstrim.$(OBJEXT)
pdenstrim_OBJECTS = $(am_pdenstrim_OBJECTS)
pdenstrim_LDADD = $(LDADD)
am_probedlp_OBJECTS = $(am__objects_4) $(am__objects_5) \
	$(am__objects_6) probedlp.$(OBJEXT)
probedlp_OBJECTS = $(am_probedlp_OBJECTS)
probedlp_LDADD = $(LDADD)
am_rdf_OBJECTS = $(am__objects_4) $(am__objects_5) $(am__objects_6) \
	rdf.$(OBJEXT)
rdf_OBJECTS = $(am_rdf_OBJECTS)
rdf_LDADD = $(LDADD)
am_rdfaa_OBJECTS = $(am__objects_4) $(am__objects_5) $(am__objects_6) \
	rdf_aa.$(OBJEXT)
rdfaa_OBJECTS = $(am_rdfaa_OBJECTS)
rdfaa_LDADD = $(LDADD)
am_rdfaainter_OBJECTS = $(am__objects_4) $(am__objects_5) \
	$(am__objects_6) rdf_aa_inter.$(OBJEXT)
rdfaainter_OBJECTS = $(am_rdfaainter_OBJECTS)
rdfaainter_LDADD = $(LDADD)
am_rdfss_OBJECTS = $(am__objects_4) $(am__objects_5) $(am__objects_6) \
	rdf_ss.$(OBJEXT)
rdfss_OBJECTS = $(am_rdfss_OBJECTS)
rdfss_LDADD = $(LDADD)
am_rdfsum_OBJECTS = $(am__objects_4) $(am__objects_5) rdfsum.$(OBJEXT)
rdfsum_OBJECTS = $(am_rdfsum_OBJECTS)
rdfsum_LDADD = $(LDADD)
am__objects_10 = sq-parse.$(OBJEXT)
am__objects_11 = sq-dlprw.$(OBJEXT)
am__objects_12 = sq-utility.$(OBJEXT)
am_sq_OBJECTS = $(am__objects_10) $(am__objects_11) $(am__objects_12) \
	sq-sq.$(OBJEXT)
sq_OBJECTS = $(am_sq_OBJECTS)
sq_LDADD = $(LDADD)
sq_LINK = $(LIBTOOL) --tag=FC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(FCLD) $(sq_FCFLAGS) $(FCFLAGS) $(sq_LDFLAGS) \
	$(LDFLAGS) -o $@
am_totalgr_OBJECTS = $(am__objects_4) $(am__objects_5) \
	$(am__objects_6) totalgr.$(OBJEXT)
totalgr_OBJECTS = $(am_totalgr_OBJECTS)
totalgr_LDADD = $(LDADD)
am_vac_OBJECTS = $(am__objects_4) $(am__objects_5) $(am__objects_6) \
	vac.$(OBJEXT)
vac_OBJECTS = $(am_vac_OBJECTS)
vac_LDADD = $(LDADD)
am_vac2_OBJECTS = $(am__objects_4) $(am__objects_5) $(am__objects_6) \
	vac2.$(OBJEXT)
vac2_OBJECTS = $(am_vac2_OBJECTS)
vac2_LDADD = $(LDADD)
am_xyz2his_OBJECTS = $(am__objects_4) $(am__objects_5) \
	xyz2his.$(OBJEXT)
xyz2his_OBJECTS = $(am_xyz2his_OBJECTS)
xyz2his_LDADD = $(LDADD)
am_zangle_OBJECTS = $(am__objects_4) $(am__objects_5) $(am__objects_6) \
	zangle.$(OBJEXT)
zangle_OBJECTS = $(am_zangle_OBJECTS)
zangle_LDADD = $(LDADD)
am_zdens_OBJECTS = $(am__objects_4) $(am__objects_5) $(am__objects_6) \
	zdens.$(OBJEXT)
zdens_OBJECTS = $(am_zdens_OBJECTS)
zdens_LDADD = $(LDADD)
DEFAULT_INCLUDES = -I.
FCCOMPILE = $(FC) $(AM_FCFLAGS) $(FCFLAGS)
LTFCCOMPILE = $(LIBTOOL) --tag=FC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=compile $(FC) $(AM_FCFLAGS) $(FCFLAGS)
FCLD = $(FC)
FCLINK = $(LIBTOOL) --tag=FC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(FCLD) $(AM_FCFLAGS) $(FCFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
SOURCES = $(acf_SOURCES) $(acfcat_SOURCES) $(acfprep_SOURCES) \
	$(acfsum_SOURCES) $(addheader_SOURCES) $(angle_SOURCES) \
	$(avgconfig_SOURCES) $(bident_SOURCES) $(bident2_SOURCES) \
	$(bident2anal_SOURCES) $(bident3_SOURCES) $(bident4_SOURCES) \
	$(cagecor2_SOURCES) $(catdlp_SOURCES) $(cdf_SOURCES) \
	$(chunkdlp_SOURCES) $(cluster_SOURCES) $(cn_SOURCES) \
	$(counthb_SOURCES) $(cryscomp_SOURCES) $(dacf_SOURCES) \
	$(dahist_SOURCES) $(dist2_SOURCES) $(dlp2dlp_SOURCES) \
	$(dlp2dlpflipz_SOURCES) $(dlp2dlpshift_SOURCES) \
	$(dlp2xyzf_SOURCES) $(dlpgeom_SOURCES) $(dlpreorder_SOURCES) \
	$(dlpsize_SOURCES) $(editconfig_SOURCES) $(filterdlp_SOURCES) \
	$(gengg_SOURCES) $(genlb_SOURCES) $(getcell_SOURCES) \
	$(glucanal_SOURCES) $(glucgeom_SOURCES) $(gluchb_SOURCES) \
	$(gluchbeach_SOURCES) $(glucsphere_SOURCES) \
	$(his2config_SOURCES) $(his2xyzs_SOURCES) \
	$(intertorsion_SOURCES) $(intratorsion_SOURCES) \
	$(legendre_SOURCES) $(lifehb_SOURCES) $(moldist_SOURCES) \
	$(msd_SOURCES) $(msd2_SOURCES) $(pairs_SOURCES) \
	$(pdens_SOURCES) $(pdensint_SOURCES) $(pdensmirror_SOURCES) \
	$(pdenstrim_SOURCES) $(probedlp_SOURCES) $(rdf_SOURCES) \
	$(rdfaa_SOURCES) $(rdfaainter_SOURCES) $(rdfss_SOURCES) \
	$(rdfsum_SOURCES) $(sq_SOURCES) $(totalgr_SOURCES) \
	$(vac_SOURCES) $(vac2_SOURCES) $(xyz2his_SOURCES) \
	$(zangle_SOURCES) $(zdens_SOURCES)
DIST_SOURCES = $(acf_SOURCES) $(acfcat_SOURCES) $(acfprep_SOURCES) \
	$(acfsum_SOURCES) $(addheader_SOURCES) $(angle_SOURCES) \
	$(avgconfig_SOURCES) $(bident_SOURCES) $(bident2_SOURCES) \
	$(bident2anal_SOURCES) $(bident3_SOURCES) $(bident4_SOURCES) \
	$(cagecor2_SOURCES) $(catdlp_SOURCES) $(cdf_SOURCES) \
	$(chunkdlp_SOURCES) $(cluster_SOURCES) $(cn_SOURCES) \
	$(counthb_SOURCES) $(cryscomp_SOURCES) $(dacf_SOURCES) \
	$(dahist_SOURCES) $(dist2_SOURCES) $(dlp2dlp_SOURCES) \
	$(dlp2dlpflipz_SOURCES) $(dlp2dlpshift_SOURCES) \
	$(dlp2xyzf_SOURCES) $(dlpgeom_SOURCES) $(dlpreorder_SOURCES) \
	$(dlpsize_SOURCES) $(editconfig_SOURCES) $(filterdlp_SOURCES) \
	$(gengg_SOURCES) $(genlb_SOURCES) $(getcell_SOURCES) \
	$(glucanal_SOURCES) $(glucgeom_SOURCES) $(gluchb_SOURCES) \
	$(gluchbeach_SOURCES) $(glucsphere_SOURCES) \
	$(his2config_SOURCES) $(his2xyzs_SOURCES) \
	$(intertorsion_SOURCES) $(intratorsion_SOURCES) \
	$(legendre_SOURCES) $(lifehb_SOURCES) $(moldist_SOURCES) \
	$(msd_SOURCES) $(msd2_SOURCES) $(pairs_SOURCES) \
	$(pdens_SOURCES) $(pdensint_SOURCES) $(pdensmirror_SOURCES) \
	$(pdenstrim_SOURCES) $(probedlp_SOURCES) $(rdf_SOURCES) \
	$(rdfaa_SOURCES) $(rdfaainter_SOURCES) $(rdfss_SOURCES) \
	$(rdfsum_SOURCES) $(sq_SOURCES) $(totalgr_SOURCES) \
	$(vac_SOURCES) $(vac2_SOURCES) $(xyz2his_SOURCES) \
	$(zangle_SOURCES) $(zdens_SOURCES)
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
ETAGS = etags
CTAGS = ctags
CSCOPE = cscope
AM_RECURSIVE_TARGETS = cscope
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
distdir = $(PACKAGE)-$(VERSION)
top_distdir = $(distdir)
am__remove_distdir = \
  if test -d "$(distdir)"; then \
    find "$(distdir)" -type d ! -perm -200 -exec chmod u+w {} ';' \
      && rm -rf "$(distdir)" \
      || { sleep 5 && rm -rf "$(distdir)"; }; \
  else :; fi
am__post_remove_distdir = $(am__remove_distdir)
DIST_ARCHIVES = $(distdir).tar.gz
GZIP_ENV = --best
DIST_TARGETS = dist-gzip
distuninstallcheck_listfiles = find . -type f -print
am__distuninstallcheck_listfiles = $(distuninstallcheck_listfiles) \
  | sed 's|^\./|$(prefix)/|' | grep -v '$(infodir)/dir$$'
distcleancheck_listfiles = find . -type f -print
ACLOCAL = ${SHELL} /home/tris/src/dlputils/config/missing --run aclocal-1.12
AMTAR = $${TAR-tar}
AR = ar
AUTOCONF = ${SHELL} /home/tris/src/dlputils/config/missing --run autoconf
AUTOHEADER = ${SHELL} /home/tris/src/dlputils/config/missing --run autoheader
AUTOMAKE = ${SHELL} /home/tris/src/dlputils/config/missing --run automake-1.12
AWK = gawk
BUILDDIR = 
CC = gcc
CCDEPMODE = depmode=none
CFLAGS = -g -O2
CPP = gcc -E
CPPFLAGS = 
CYGPATH_W = echo
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
DLLTOOL = false
DSYMUTIL = 
DUMPBIN = 
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /usr/bin/grep -E
EXEEXT = 
FC = gfortran
FCFLAGS = -O2 -ffree-line-length-none
FGREP = /usr/bin/grep -F
GREP = /usr/bin/grep
INSTALL = /usr/bin/install -c
INSTALLDIR = /home/tris
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
LD = /usr/x86_64-suse-linux/bin/ld -m elf_x86_64
LDFLAGS = 
LIBOBJS = 
LIBS = 
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LIPO = 
LN_S = ln -s
LTLIBOBJS = 
MAKEINFO = ${SHELL} /home/tris/src/dlputils/config/missing --run makeinfo
MANIFEST_TOOL = :
MKDIR_P = /usr/bin/mkdir -p
NM = /usr/bin/nm -B
NMEDIT = 
OBJDUMP = objdump
OBJEXT = o
OTOOL = 
OTOOL64 = 
PACKAGE = dlputils
PACKAGE_BUGREPORT = tris@projectaten.net
PACKAGE_NAME = aten
PACKAGE_STRING = aten r87
PACKAGE_TARNAME = aten
PACKAGE_URL = 
PACKAGE_VERSION = r87
PATH_SEPARATOR = :
RANLIB = ranlib
SED = /usr/bin/sed
SET_MAKE = 
SHELL = /bin/sh
STRIP = strip
VERSION = r87
abs_builddir = /home/tris/src/dlputils
abs_srcdir = /home/tris/src/dlputils
abs_top_builddir = /home/tris/src/dlputils
abs_top_srcdir = /home/tris/src/dlputils
ac_ct_AR = ar
ac_ct_CC = gcc
ac_ct_DUMPBIN = 
ac_ct_FC = gfortran
am__include = include
am__leading_dot = .
am__quote = 
am__tar = $${TAR-tar} chof - "$$tardir"
am__untar = $${TAR-tar} xf -
bindir = ${exec_prefix}/bin
build = x86_64-suse-linux-gnu
build_alias = 
build_cpu = x86_64
build_os = linux-gnu
build_vendor = suse
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = ${prefix}
host = x86_64-suse-linux-gnu
host_alias = 
host_cpu = x86_64
host_os = linux-gnu
host_vendor = suse
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = ${SHELL} /home/tris/src/dlputils/config/install-sh
libdir = ${exec_prefix}/lib64
libexecdir = ${exec_prefix}/lib
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
mandir = ${datarootdir}/man
mkdir_p = /usr/bin/mkdir -p
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /home/tris
program_transform_name = s,x,x,
psdir = ${docdir}
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = .
sysconfdir = ${prefix}/etc
target = x86_64-suse-linux-gnu
target_alias = 
target_cpu = x86_64
target_os = linux-gnu
target_vendor = suse
top_build_prefix = 
top_builddir = .
top_srcdir = .

# Define some module variables
PARSE = parse.f90
DLPRW = dlprw.f90 
UTILITY = utility.f90
FIELDREAD = fieldread.f90

# In order to compile the last few programs, MPI is required.
# Set the following two lines to reflect the locations of the includes and libraries on your system
MPIFC = "-I/usr/lib64/mpi/gcc/openmpi/include"
MPILD = "-L/usr/lib64/mpi/gcc/openmpi/lib64 -lmpi_f90"

# Converters
addheader_SOURCES = ${PARSE} ${DLPRW} addheader.f90
catdlp_SOURCES = ${PARSE} ${DLPRW} catdlp.f90
chunkdlp_SOURCES = ${PARSE} ${DLPRW} chunkdlp.f90
dlp2xyzf_SOURCES = ${PARSE} ${DLPRW} dlp2xyzf.f90
dlp2dlp_SOURCES = ${PARSE} ${DLPRW} dlp2dlp.f90
dlp2dlpflipz_SOURCES = ${PARSE} ${DLPRW} dlp2dlpflipz.f90
dlp2dlpshift_SOURCES = ${PARSE} ${DLPRW} dlp2dlpshift.f90
dlpreorder_SOURCES = ${PARSE} ${DLPRW} dlpreorder.f90
editconfig_SOURCES = ${PARSE} ${DLPRW} editconfig.f90
filterdlp_SOURCES = ${PARSE} ${DLPRW} filterdlp.f90
his2config_SOURCES = ${PARSE} ${DLPRW} his2config.f90
his2xyzs_SOURCES = ${PARSE} ${DLPRW} his2xyzs.f90
xyz2his_SOURCES = ${PARSE} ${DLPRW} xyz2his.f90

# RDF
cdf_SOURCES = ${PARSE} ${DLPRW} ${UTILITY} cdf.f90
dist2_SOURCES = ${PARSE} ${DLPRW} ${UTILITY} dist2.f90
rdf_SOURCES = ${PARSE} ${DLPRW} ${UTILITY} rdf.f90
rdfsum_SOURCES = ${PARSE} ${DLPRW} rdfsum.f90
rdfaa_SOURCES = ${PARSE} ${DLPRW} ${UTILITY} rdf_aa.f90
rdfaainter_SOURCES = ${PARSE} ${DLPRW} ${UTILITY} rdf_aa_inter.f90
rdfss_SOURCES = ${PARSE} ${DLPRW} ${UTILITY} rdf_ss.f90
zdens_SOURCES = ${PARSE} ${DLPRW} ${UTILITY} zdens.f90

# SQ
sq_SOURCES = ${PARSE} ${DLPRW} ${UTILITY} sq.f90
sq_FCFLAGS = ${MPIFC}
sq_LDFLAGS = ${MPILD}
totalgr_SOURCES = ${PARSE} ${DLPRW} ${UTILITY} totalgr.f90

# Analyse 1
acf_SOURCES = ${PARSE} ${DLPRW} ${UTILITY} acf.f90
acf_FCFLAGS = ${MPIFC}
acf_LDFLAGS = ${MPILD}
acfcat_SOURCES = ${PARSE} ${DLPRW} ${UTILITY} acfcat.f90
acfprep_SOURCES = ${PARSE} ${DLPRW} ${UTILITY} acfprep.f90
acfsum_SOURCES = ${PARSE} ${DLPRW} ${UTILITY} acfsum.f90
angle_SOURCES = ${PARSE} ${DLPRW} ${UTILITY} angle.f90
cagecor2_SOURCES = ${PARSE} ${DLPRW} ${UTILITY} cagecor2.f90
cn_SOURCES = ${PARSE} ${DLPRW} ${UTILITY} cn.f90
counthb_SOURCES = ${PARSE} ${DLPRW} ${UTILITY} counthb.f90
dacf_SOURCES = ${PARSE} ${DLPRW} ${UTILITY} dacf.f90
dacf_FCFLAGS = ${MPIFC}
dacf_LDFLAGS = ${MPILD}
dlpgeom_SOURCES = ${PARSE} ${DLPRW} ${UTILITY} dlpgeom.f90
getcell_SOURCES = ${PARSE} ${DLPRW} ${UTILITY} getcell.f90
intertorsion_SOURCES = ${PARSE} ${DLPRW} ${UTILITY} intertorsion.f90
intratorsion_SOURCES = ${PARSE} ${DLPRW} ${UTILITY} intratorsion.f90
lifehb_SOURCES = ${PARSE} ${DLPRW} ${UTILITY} lifehb.f90
moldist_SOURCES = ${PARSE} ${DLPRW} ${UTILITY} moldist.f90
msd_SOURCES = ${PARSE} ${DLPRW} ${UTILITY} msd.f90
msd2_SOURCES = ${PARSE} ${DLPRW} ${UTILITY} msd2.f90
vac_SOURCES = ${PARSE} ${DLPRW} ${UTILITY} vac.f90
vac2_SOURCES = ${PARSE} ${DLPRW} ${UTILITY} vac2.f90

# Analyse 2
bident_SOURCES = ${PARSE} ${DLPRW} ${UTILITY} bident.f90
bident2_SOURCES = ${PARSE} ${DLPRW} ${UTILITY} bident2.f90
bident2anal_SOURCES = ${PARSE} ${DLPRW} ${UTILITY} bident2anal.f90
bident3_SOURCES = ${PARSE} ${DLPRW} ${UTILITY} bident3.f90
bident4_SOURCES = ${PARSE} ${DLPRW} ${UTILITY} bident4.f90
cluster_SOURCES = ${PARSE} ${DLPRW} ${UTILITY} cluster.f90
cryscomp_SOURCES = ${PARSE} ${DLPRW} ${UTILITY} cryscomp.f90
dahist_SOURCES = ${PARSE} ${DLPRW} ${UTILITY} dahist.f90
legendre_SOURCES = ${PARSE} ${DLPRW} ${UTILITY} legendre.f90
zangle_SOURCES = ${PARSE} ${DLPRW} ${UTILITY} zangle.f90

# Glucose
glucanal_SOURCES = ${PARSE} ${DLPRW} ${UTILITY} glucanal.f90
glucgeom_SOURCES = ${PARSE} ${DLPRW} ${UTILITY} glucgeom.f90
gluchb_SOURCES = ${PARSE} ${DLPRW} ${UTILITY} gluchb.f90
gluchbeach_SOURCES = ${PARSE} ${DLPRW} ${UTILITY} gluchbeach.f90
glucsphere_SOURCES = ${PARSE} ${DLPRW} ${UTILITY} glucsphere.f90

# Probability Densities
pdens_SOURCES = ${PARSE} ${DLPRW} ${UTILITY} pdens.f90
pdensint_SOURCES = ${PARSE} ${DLPRW} ${UTILITY} pdensint.f90
pdensmirror_SOURCES = ${PARSE} ${DLPRW} ${UTILITY} pdensmirror.f90
pdenstrim_SOURCES = ${PARSE} ${DLPRW} ${UTILITY} pdenstrim.f90

# Misc
avgconfig_SOURCES = ${PARSE} ${DLPRW} ${UTILITY} avgconfig.f90
dlpsize_SOURCES = ${PARSE} ${DLPRW} ${UTILITY} dlpsize.f90
genlb_SOURCES = ${PARSE} genlb.f90
gengg_SOURCES = ${PARSE} gengg.f90
pairs_SOURCES = ${PARSE} ${DLPRW} ${UTILITY} pairs.f90
probedlp_SOURCES = ${PARSE} ${DLPRW} ${UTILITY} probedlp.f90
all: config.h
	$(MAKE) $(AM_MAKEFLAGS) all-am

.SUFFIXES:
.SUFFIXES: .f90 .lo .o .obj
am--refresh: Makefile
	@:
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      echo ' cd $(srcdir) && $(AUTOMAKE) --gnu'; \
	      $(am__cd) $(srcdir) && $(AUTOMAKE) --gnu \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --gnu Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    echo ' $(SHELL) ./config.status'; \
	    $(SHELL) ./config.status;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	$(SHELL) ./config.status --recheck

$(top_srcdir)/configure:  $(am__configure_deps)
	$(am__cd) $(srcdir) && $(AUTOCONF)
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	$(am__cd) $(srcdir) && $(ACLOCAL) $(ACLOCAL_AMFLAGS)
$(am__aclocal_m4_deps):

config.h: stamp-h1
	@if test ! -f $@; then rm -f stamp-h1; else :; fi
	@if test ! -f $@; then $(MAKE) $(AM_MAKEFLAGS) stamp-h1; else :; fi

stamp-h1: $(srcdir)/config.h.in $(top_builddir)/config.status
	@rm -f stamp-h1
	cd $(top_builddir) && $(SHELL) ./config.status config.h
$(srcdir)/config.h.in:  $(am__configure_deps) 
	($(am__cd) $(top_srcdir) && $(AUTOHEADER))
	rm -f stamp-h1
	touch $@

distclean-hdr:
	-rm -f config.h stamp-h1
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(bindir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(bindir)" || exit 1; \
	fi; \
	for p in $$list; do echo "$$p $$p"; done | \
	sed 's/$(EXEEXT)$$//' | \
	while read p p1; do if test -f $$p || test -f $$p1; \
	  then echo "$$p"; echo "$$p"; else :; fi; \
	done | \
	sed -e 'p;s,.*/,,;n;h' -e 's|.*|.|' \
	    -e 'p;x;s,.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/' | \
	sed 'N;N;N;s,\n, ,g' | \
	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1 } \
	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
	    if ($$2 == $$4) files[d] = files[d] " " $$1; \
	    else { print "f", $$3 "/" $$4, $$1; } } \
	  END { for (d in files) print "f", d, files[d] }' | \
	while read type dir files; do \
	    if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
	    test -z "$$files" || { \
	    echo " $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL_PROGRAM) $$files '$(DESTDIR)$(bindir)$$dir'"; \
	    $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL_PROGRAM) $$files "$(DESTDIR)$(bindir)$$dir" || exit $$?; \
	    } \
	; done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	files=`for p in $$list; do echo "$$p"; done | \
	  sed -e 'h;s,^.*/,,;s/$(EXEEXT)$$//;$(transform)' \
	      -e 's/$$/$(EXEEXT)/' `; \
	test -n "$$list" || exit 0; \
	echo " ( cd '$(DESTDIR)$(bindir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(bindir)" && rm -f $$files

clean-binPROGRAMS:
	@list='$(bin_PROGRAMS)'; test -n "$$list" || exit 0; \
	echo " rm -f" $$list; \
	rm -f $$list || exit $$?; \
	test -n "$(EXEEXT)" || exit 0; \
	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f" $$list; \
	rm -f $$list
acf$(EXEEXT): $(acf_OBJECTS) $(acf_DEPENDENCIES) $(EXTRA_acf_DEPENDENCIES) 
	@rm -f acf$(EXEEXT)
	$(acf_LINK) $(acf_OBJECTS) $(acf_LDADD) $(LIBS)
acfcat$(EXEEXT): $(acfcat_OBJECTS) $(acfcat_DEPENDENCIES) $(EXTRA_acfcat_DEPENDENCIES) 
	@rm -f acfcat$(EXEEXT)
	$(FCLINK) $(acfcat_OBJECTS) $(acfcat_LDADD) $(LIBS)
acfprep$(EXEEXT): $(acfprep_OBJECTS) $(acfprep_DEPENDENCIES) $(EXTRA_acfprep_DEPENDENCIES) 
	@rm -f acfprep$(EXEEXT)
	$(FCLINK) $(acfprep_OBJECTS) $(acfprep_LDADD) $(LIBS)
acfsum$(EXEEXT): $(acfsum_OBJECTS) $(acfsum_DEPENDENCIES) $(EXTRA_acfsum_DEPENDENCIES) 
	@rm -f acfsum$(EXEEXT)
	$(FCLINK) $(acfsum_OBJECTS) $(acfsum_LDADD) $(LIBS)
addheader$(EXEEXT): $(addheader_OBJECTS) $(addheader_DEPENDENCIES) $(EXTRA_addheader_DEPENDENCIES) 
	@rm -f addheader$(EXEEXT)
	$(FCLINK) $(addheader_OBJECTS) $(addheader_LDADD) $(LIBS)
angle$(EXEEXT): $(angle_OBJECTS) $(angle_DEPENDENCIES) $(EXTRA_angle_DEPENDENCIES) 
	@rm -f angle$(EXEEXT)
	$(FCLINK) $(angle_OBJECTS) $(angle_LDADD) $(LIBS)
avgconfig$(EXEEXT): $(avgconfig_OBJECTS) $(avgconfig_DEPENDENCIES) $(EXTRA_avgconfig_DEPENDENCIES) 
	@rm -f avgconfig$(EXEEXT)
	$(FCLINK) $(avgconfig_OBJECTS) $(avgconfig_LDADD) $(LIBS)
bident$(EXEEXT): $(bident_OBJECTS) $(bident_DEPENDENCIES) $(EXTRA_bident_DEPENDENCIES) 
	@rm -f bident$(EXEEXT)
	$(FCLINK) $(bident_OBJECTS) $(bident_LDADD) $(LIBS)
bident2$(EXEEXT): $(bident2_OBJECTS) $(bident2_DEPENDENCIES) $(EXTRA_bident2_DEPENDENCIES) 
	@rm -f bident2$(EXEEXT)
	$(FCLINK) $(bident2_OBJECTS) $(bident2_LDADD) $(LIBS)
bident2anal$(EXEEXT): $(bident2anal_OBJECTS) $(bident2anal_DEPENDENCIES) $(EXTRA_bident2anal_DEPENDENCIES) 
	@rm -f bident2anal$(EXEEXT)
	$(FCLINK) $(bident2anal_OBJECTS) $(bident2anal_LDADD) $(LIBS)
bident3$(EXEEXT): $(bident3_OBJECTS) $(bident3_DEPENDENCIES) $(EXTRA_bident3_DEPENDENCIES) 
	@rm -f bident3$(EXEEXT)
	$(FCLINK) $(bident3_OBJECTS) $(bident3_LDADD) $(LIBS)
bident4$(EXEEXT): $(bident4_OBJECTS) $(bident4_DEPENDENCIES) $(EXTRA_bident4_DEPENDENCIES) 
	@rm -f bident4$(EXEEXT)
	$(FCLINK) $(bident4_OBJECTS) $(bident4_LDADD) $(LIBS)
cagecor2$(EXEEXT): $(cagecor2_OBJECTS) $(cagecor2_DEPENDENCIES) $(EXTRA_cagecor2_DEPENDENCIES) 
	@rm -f cagecor2$(EXEEXT)
	$(FCLINK) $(cagecor2_OBJECTS) $(cagecor2_LDADD) $(LIBS)
catdlp$(EXEEXT): $(catdlp_OBJECTS) $(catdlp_DEPENDENCIES) $(EXTRA_catdlp_DEPENDENCIES) 
	@rm -f catdlp$(EXEEXT)
	$(FCLINK) $(catdlp_OBJECTS) $(catdlp_LDADD) $(LIBS)
cdf$(EXEEXT): $(cdf_OBJECTS) $(cdf_DEPENDENCIES) $(EXTRA_cdf_DEPENDENCIES) 
	@rm -f cdf$(EXEEXT)
	$(FCLINK) $(cdf_OBJECTS) $(cdf_LDADD) $(LIBS)
chunkdlp$(EXEEXT): $(chunkdlp_OBJECTS) $(chunkdlp_DEPENDENCIES) $(EXTRA_chunkdlp_DEPENDENCIES) 
	@rm -f chunkdlp$(EXEEXT)
	$(FCLINK) $(chunkdlp_OBJECTS) $(chunkdlp_LDADD) $(LIBS)
cluster$(EXEEXT): $(cluster_OBJECTS) $(cluster_DEPENDENCIES) $(EXTRA_cluster_DEPENDENCIES) 
	@rm -f cluster$(EXEEXT)
	$(FCLINK) $(cluster_OBJECTS) $(cluster_LDADD) $(LIBS)
cn$(EXEEXT): $(cn_OBJECTS) $(cn_DEPENDENCIES) $(EXTRA_cn_DEPENDENCIES) 
	@rm -f cn$(EXEEXT)
	$(FCLINK) $(cn_OBJECTS) $(cn_LDADD) $(LIBS)
counthb$(EXEEXT): $(counthb_OBJECTS) $(counthb_DEPENDENCIES) $(EXTRA_counthb_DEPENDENCIES) 
	@rm -f counthb$(EXEEXT)
	$(FCLINK) $(counthb_OBJECTS) $(counthb_LDADD) $(LIBS)
cryscomp$(EXEEXT): $(cryscomp_OBJECTS) $(cryscomp_DEPENDENCIES) $(EXTRA_cryscomp_DEPENDENCIES) 
	@rm -f cryscomp$(EXEEXT)
	$(FCLINK) $(cryscomp_OBJECTS) $(cryscomp_LDADD) $(LIBS)
dacf$(EXEEXT): $(dacf_OBJECTS) $(dacf_DEPENDENCIES) $(EXTRA_dacf_DEPENDENCIES) 
	@rm -f dacf$(EXEEXT)
	$(dacf_LINK) $(dacf_OBJECTS) $(dacf_LDADD) $(LIBS)
dahist$(EXEEXT): $(dahist_OBJECTS) $(dahist_DEPENDENCIES) $(EXTRA_dahist_DEPENDENCIES) 
	@rm -f dahist$(EXEEXT)
	$(FCLINK) $(dahist_OBJECTS) $(dahist_LDADD) $(LIBS)
dist2$(EXEEXT): $(dist2_OBJECTS) $(dist2_DEPENDENCIES) $(EXTRA_dist2_DEPENDENCIES) 
	@rm -f dist2$(EXEEXT)
	$(FCLINK) $(dist2_OBJECTS) $(dist2_LDADD) $(LIBS)
dlp2dlp$(EXEEXT): $(dlp2dlp_OBJECTS) $(dlp2dlp_DEPENDENCIES) $(EXTRA_dlp2dlp_DEPENDENCIES) 
	@rm -f dlp2dlp$(EXEEXT)
	$(FCLINK) $(dlp2dlp_OBJECTS) $(dlp2dlp_LDADD) $(LIBS)
dlp2dlpflipz$(EXEEXT): $(dlp2dlpflipz_OBJECTS) $(dlp2dlpflipz_DEPENDENCIES) $(EXTRA_dlp2dlpflipz_DEPENDENCIES) 
	@rm -f dlp2dlpflipz$(EXEEXT)
	$(FCLINK) $(dlp2dlpflipz_OBJECTS) $(dlp2dlpflipz_LDADD) $(LIBS)
dlp2dlpshift$(EXEEXT): $(dlp2dlpshift_OBJECTS) $(dlp2dlpshift_DEPENDENCIES) $(EXTRA_dlp2dlpshift_DEPENDENCIES) 
	@rm -f dlp2dlpshift$(EXEEXT)
	$(FCLINK) $(dlp2dlpshift_OBJECTS) $(dlp2dlpshift_LDADD) $(LIBS)
dlp2xyzf$(EXEEXT): $(dlp2xyzf_OBJECTS) $(dlp2xyzf_DEPENDENCIES) $(EXTRA_dlp2xyzf_DEPENDENCIES) 
	@rm -f dlp2xyzf$(EXEEXT)
	$(FCLINK) $(dlp2xyzf_OBJECTS) $(dlp2xyzf_LDADD) $(LIBS)
dlpgeom$(EXEEXT): $(dlpgeom_OBJECTS) $(dlpgeom_DEPENDENCIES) $(EXTRA_dlpgeom_DEPENDENCIES) 
	@rm -f dlpgeom$(EXEEXT)
	$(FCLINK) $(dlpgeom_OBJECTS) $(dlpgeom_LDADD) $(LIBS)
dlpreorder$(EXEEXT): $(dlpreorder_OBJECTS) $(dlpreorder_DEPENDENCIES) $(EXTRA_dlpreorder_DEPENDENCIES) 
	@rm -f dlpreorder$(EXEEXT)
	$(FCLINK) $(dlpreorder_OBJECTS) $(dlpreorder_LDADD) $(LIBS)
dlpsize$(EXEEXT): $(dlpsize_OBJECTS) $(dlpsize_DEPENDENCIES) $(EXTRA_dlpsize_DEPENDENCIES) 
	@rm -f dlpsize$(EXEEXT)
	$(FCLINK) $(dlpsize_OBJECTS) $(dlpsize_LDADD) $(LIBS)
editconfig$(EXEEXT): $(editconfig_OBJECTS) $(editconfig_DEPENDENCIES) $(EXTRA_editconfig_DEPENDENCIES) 
	@rm -f editconfig$(EXEEXT)
	$(FCLINK) $(editconfig_OBJECTS) $(editconfig_LDADD) $(LIBS)
filterdlp$(EXEEXT): $(filterdlp_OBJECTS) $(filterdlp_DEPENDENCIES) $(EXTRA_filterdlp_DEPENDENCIES) 
	@rm -f filterdlp$(EXEEXT)
	$(FCLINK) $(filterdlp_OBJECTS) $(filterdlp_LDADD) $(LIBS)
gengg$(EXEEXT): $(gengg_OBJECTS) $(gengg_DEPENDENCIES) $(EXTRA_gengg_DEPENDENCIES) 
	@rm -f gengg$(EXEEXT)
	$(FCLINK) $(gengg_OBJECTS) $(gengg_LDADD) $(LIBS)
genlb$(EXEEXT): $(genlb_OBJECTS) $(genlb_DEPENDENCIES) $(EXTRA_genlb_DEPENDENCIES) 
	@rm -f genlb$(EXEEXT)
	$(FCLINK) $(genlb_OBJECTS) $(genlb_LDADD) $(LIBS)
getcell$(EXEEXT): $(getcell_OBJECTS) $(getcell_DEPENDENCIES) $(EXTRA_getcell_DEPENDENCIES) 
	@rm -f getcell$(EXEEXT)
	$(FCLINK) $(getcell_OBJECTS) $(getcell_LDADD) $(LIBS)
glucanal$(EXEEXT): $(glucanal_OBJECTS) $(glucanal_DEPENDENCIES) $(EXTRA_glucanal_DEPENDENCIES) 
	@rm -f glucanal$(EXEEXT)
	$(FCLINK) $(glucanal_OBJECTS) $(glucanal_LDADD) $(LIBS)
glucgeom$(EXEEXT): $(glucgeom_OBJECTS) $(glucgeom_DEPENDENCIES) $(EXTRA_glucgeom_DEPENDENCIES) 
	@rm -f glucgeom$(EXEEXT)
	$(FCLINK) $(glucgeom_OBJECTS) $(glucgeom_LDADD) $(LIBS)
gluchb$(EXEEXT): $(gluchb_OBJECTS) $(gluchb_DEPENDENCIES) $(EXTRA_gluchb_DEPENDENCIES) 
	@rm -f gluchb$(EXEEXT)
	$(FCLINK) $(gluchb_OBJECTS) $(gluchb_LDADD) $(LIBS)
gluchbeach$(EXEEXT): $(gluchbeach_OBJECTS) $(gluchbeach_DEPENDENCIES) $(EXTRA_gluchbeach_DEPENDENCIES) 
	@rm -f gluchbeach$(EXEEXT)
	$(FCLINK) $(gluchbeach_OBJECTS) $(gluchbeach_LDADD) $(LIBS)
glucsphere$(EXEEXT): $(glucsphere_OBJECTS) $(glucsphere_DEPENDENCIES) $(EXTRA_glucsphere_DEPENDENCIES) 
	@rm -f glucsphere$(EXEEXT)
	$(FCLINK) $(glucsphere_OBJECTS) $(glucsphere_LDADD) $(LIBS)
his2config$(EXEEXT): $(his2config_OBJECTS) $(his2config_DEPENDENCIES) $(EXTRA_his2config_DEPENDENCIES) 
	@rm -f his2config$(EXEEXT)
	$(FCLINK) $(his2config_OBJECTS) $(his2config_LDADD) $(LIBS)
his2xyzs$(EXEEXT): $(his2xyzs_OBJECTS) $(his2xyzs_DEPENDENCIES) $(EXTRA_his2xyzs_DEPENDENCIES) 
	@rm -f his2xyzs$(EXEEXT)
	$(FCLINK) $(his2xyzs_OBJECTS) $(his2xyzs_LDADD) $(LIBS)
intertorsion$(EXEEXT): $(intertorsion_OBJECTS) $(intertorsion_DEPENDENCIES) $(EXTRA_intertorsion_DEPENDENCIES) 
	@rm -f intertorsion$(EXEEXT)
	$(FCLINK) $(intertorsion_OBJECTS) $(intertorsion_LDADD) $(LIBS)
intratorsion$(EXEEXT): $(intratorsion_OBJECTS) $(intratorsion_DEPENDENCIES) $(EXTRA_intratorsion_DEPENDENCIES) 
	@rm -f intratorsion$(EXEEXT)
	$(FCLINK) $(intratorsion_OBJECTS) $(intratorsion_LDADD) $(LIBS)
legendre$(EXEEXT): $(legendre_OBJECTS) $(legendre_DEPENDENCIES) $(EXTRA_legendre_DEPENDENCIES) 
	@rm -f legendre$(EXEEXT)
	$(FCLINK) $(legendre_OBJECTS) $(legendre_LDADD) $(LIBS)
lifehb$(EXEEXT): $(lifehb_OBJECTS) $(lifehb_DEPENDENCIES) $(EXTRA_lifehb_DEPENDENCIES) 
	@rm -f lifehb$(EXEEXT)
	$(FCLINK) $(lifehb_OBJECTS) $(lifehb_LDADD) $(LIBS)
moldist$(EXEEXT): $(moldist_OBJECTS) $(moldist_DEPENDENCIES) $(EXTRA_moldist_DEPENDENCIES) 
	@rm -f moldist$(EXEEXT)
	$(FCLINK) $(moldist_OBJECTS) $(moldist_LDADD) $(LIBS)
msd$(EXEEXT): $(msd_OBJECTS) $(msd_DEPENDENCIES) $(EXTRA_msd_DEPENDENCIES) 
	@rm -f msd$(EXEEXT)
	$(FCLINK) $(msd_OBJECTS) $(msd_LDADD) $(LIBS)
msd2$(EXEEXT): $(msd2_OBJECTS) $(msd2_DEPENDENCIES) $(EXTRA_msd2_DEPENDENCIES) 
	@rm -f msd2$(EXEEXT)
	$(FCLINK) $(msd2_OBJECTS) $(msd2_LDADD) $(LIBS)
pairs$(EXEEXT): $(pairs_OBJECTS) $(pairs_DEPENDENCIES) $(EXTRA_pairs_DEPENDENCIES) 
	@rm -f pairs$(EXEEXT)
	$(FCLINK) $(pairs_OBJECTS) $(pairs_LDADD) $(LIBS)
pdens$(EXEEXT): $(pdens_OBJECTS) $(pdens_DEPENDENCIES) $(EXTRA_pdens_DEPENDENCIES) 
	@rm -f pdens$(EXEEXT)
	$(FCLINK) $(pdens_OBJECTS) $(pdens_LDADD) $(LIBS)
pdensint$(EXEEXT): $(pdensint_OBJECTS) $(pdensint_DEPENDENCIES) $(EXTRA_pdensint_DEPENDENCIES) 
	@rm -f pdensint$(EXEEXT)
	$(FCLINK) $(pdensint_OBJECTS) $(pdensint_LDADD) $(LIBS)
pdensmirror$(EXEEXT): $(pdensmirror_OBJECTS) $(pdensmirror_DEPENDENCIES) $(EXTRA_pdensmirror_DEPENDENCIES) 
	@rm -f pdensmirror$(EXEEXT)
	$(FCLINK) $(pdensmirror_OBJECTS) $(pdensmirror_LDADD) $(LIBS)
pdenstrim$(EXEEXT): $(pdenstrim_OBJECTS) $(pdenstrim_DEPENDENCIES) $(EXTRA_pdenstrim_DEPENDENCIES) 
	@rm -f pdenstrim$(EXEEXT)
	$(FCLINK) $(pdenstrim_OBJECTS) $(pdenstrim_LDADD) $(LIBS)
probedlp$(EXEEXT): $(probedlp_OBJECTS) $(probedlp_DEPENDENCIES) $(EXTRA_probedlp_DEPENDENCIES) 
	@rm -f probedlp$(EXEEXT)
	$(FCLINK) $(probedlp_OBJECTS) $(probedlp_LDADD) $(LIBS)
rdf$(EXEEXT): $(rdf_OBJECTS) $(rdf_DEPENDENCIES) $(EXTRA_rdf_DEPENDENCIES) 
	@rm -f rdf$(EXEEXT)
	$(FCLINK) $(rdf_OBJECTS) $(rdf_LDADD) $(LIBS)
rdfaa$(EXEEXT): $(rdfaa_OBJECTS) $(rdfaa_DEPENDENCIES) $(EXTRA_rdfaa_DEPENDENCIES) 
	@rm -f rdfaa$(EXEEXT)
	$(FCLINK) $(rdfaa_OBJECTS) $(rdfaa_LDADD) $(LIBS)
rdfaainter$(EXEEXT): $(rdfaainter_OBJECTS) $(rdfaainter_DEPENDENCIES) $(EXTRA_rdfaainter_DEPENDENCIES) 
	@rm -f rdfaainter$(EXEEXT)
	$(FCLINK) $(rdfaainter_OBJECTS) $(rdfaainter_LDADD) $(LIBS)
rdfss$(EXEEXT): $(rdfss_OBJECTS) $(rdfss_DEPENDENCIES) $(EXTRA_rdfss_DEPENDENCIES) 
	@rm -f rdfss$(EXEEXT)
	$(FCLINK) $(rdfss_OBJECTS) $(rdfss_LDADD) $(LIBS)
rdfsum$(EXEEXT): $(rdfsum_OBJECTS) $(rdfsum_DEPENDENCIES) $(EXTRA_rdfsum_DEPENDENCIES) 
	@rm -f rdfsum$(EXEEXT)
	$(FCLINK) $(rdfsum_OBJECTS) $(rdfsum_LDADD) $(LIBS)
sq$(EXEEXT): $(sq_OBJECTS) $(sq_DEPENDENCIES) $(EXTRA_sq_DEPENDENCIES) 
	@rm -f sq$(EXEEXT)
	$(sq_LINK) $(sq_OBJECTS) $(sq_LDADD) $(LIBS)
totalgr$(EXEEXT): $(totalgr_OBJECTS) $(totalgr_DEPENDENCIES) $(EXTRA_totalgr_DEPENDENCIES) 
	@rm -f totalgr$(EXEEXT)
	$(FCLINK) $(totalgr_OBJECTS) $(totalgr_LDADD) $(LIBS)
vac$(EXEEXT): $(vac_OBJECTS) $(vac_DEPENDENCIES) $(EXTRA_vac_DEPENDENCIES) 
	@rm -f vac$(EXEEXT)
	$(FCLINK) $(vac_OBJECTS) $(vac_LDADD) $(LIBS)
vac2$(EXEEXT): $(vac2_OBJECTS) $(vac2_DEPENDENCIES) $(EXTRA_vac2_DEPENDENCIES) 
	@rm -f vac2$(EXEEXT)
	$(FCLINK) $(vac2_OBJECTS) $(vac2_LDADD) $(LIBS)
xyz2his$(EXEEXT): $(xyz2his_OBJECTS) $(xyz2his_DEPENDENCIES) $(EXTRA_xyz2his_DEPENDENCIES) 
	@rm -f xyz2his$(EXEEXT)
	$(FCLINK) $(xyz2his_OBJECTS) $(xyz2his_LDADD) $(LIBS)
zangle$(EXEEXT): $(zangle_OBJECTS) $(zangle_DEPENDENCIES) $(EXTRA_zangle_DEPENDENCIES) 
	@rm -f zangle$(EXEEXT)
	$(FCLINK) $(zangle_OBJECTS) $(zangle_LDADD) $(LIBS)
zdens$(EXEEXT): $(zdens_OBJECTS) $(zdens_DEPENDENCIES) $(EXTRA_zdens_DEPENDENCIES) 
	@rm -f zdens$(EXEEXT)
	$(FCLINK) $(zdens_OBJECTS) $(zdens_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

.f90.o:
	$(FCCOMPILE) -c -o $@ $<

.f90.obj:
	$(FCCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.f90.lo:
	$(LTFCCOMPILE) -c -o $@ $<

acf-parse.o: parse.f90
	$(FC) $(acf_FCFLAGS) $(FCFLAGS) -c -o acf-parse.o `test -f 'parse.f90' || echo '$(srcdir)/'`parse.f90

acf-parse.obj: parse.f90
	$(FC) $(acf_FCFLAGS) $(FCFLAGS) -c -o acf-parse.obj `if test -f 'parse.f90'; then $(CYGPATH_W) 'parse.f90'; else $(CYGPATH_W) '$(srcdir)/parse.f90'; fi`

acf-dlprw.o: dlprw.f90
	$(FC) $(acf_FCFLAGS) $(FCFLAGS) -c -o acf-dlprw.o `test -f 'dlprw.f90' || echo '$(srcdir)/'`dlprw.f90

acf-dlprw.obj: dlprw.f90
	$(FC) $(acf_FCFLAGS) $(FCFLAGS) -c -o acf-dlprw.obj `if test -f 'dlprw.f90'; then $(CYGPATH_W) 'dlprw.f90'; else $(CYGPATH_W) '$(srcdir)/dlprw.f90'; fi`

acf-utility.o: utility.f90
	$(FC) $(acf_FCFLAGS) $(FCFLAGS) -c -o acf-utility.o `test -f 'utility.f90' || echo '$(srcdir)/'`utility.f90

acf-utility.obj: utility.f90
	$(FC) $(acf_FCFLAGS) $(FCFLAGS) -c -o acf-utility.obj `if test -f 'utility.f90'; then $(CYGPATH_W) 'utility.f90'; else $(CYGPATH_W) '$(srcdir)/utility.f90'; fi`

acf-acf.o: acf.f90
	$(FC) $(acf_FCFLAGS) $(FCFLAGS) -c -o acf-acf.o `test -f 'acf.f90' || echo '$(srcdir)/'`acf.f90

acf-acf.obj: acf.f90
	$(FC) $(acf_FCFLAGS) $(FCFLAGS) -c -o acf-acf.obj `if test -f 'acf.f90'; then $(CYGPATH_W) 'acf.f90'; else $(CYGPATH_W) '$(srcdir)/acf.f90'; fi`

dacf-parse.o: parse.f90
	$(FC) $(dacf_FCFLAGS) $(FCFLAGS) -c -o dacf-parse.o `test -f 'parse.f90' || echo '$(srcdir)/'`parse.f90

dacf-parse.obj: parse.f90
	$(FC) $(dacf_FCFLAGS) $(FCFLAGS) -c -o dacf-parse.obj `if test -f 'parse.f90'; then $(CYGPATH_W) 'parse.f90'; else $(CYGPATH_W) '$(srcdir)/parse.f90'; fi`

dacf-dlprw.o: dlprw.f90
	$(FC) $(dacf_FCFLAGS) $(FCFLAGS) -c -o dacf-dlprw.o `test -f 'dlprw.f90' || echo '$(srcdir)/'`dlprw.f90

dacf-dlprw.obj: dlprw.f90
	$(FC) $(dacf_FCFLAGS) $(FCFLAGS) -c -o dacf-dlprw.obj `if test -f 'dlprw.f90'; then $(CYGPATH_W) 'dlprw.f90'; else $(CYGPATH_W) '$(srcdir)/dlprw.f90'; fi`

dacf-utility.o: utility.f90
	$(FC) $(dacf_FCFLAGS) $(FCFLAGS) -c -o dacf-utility.o `test -f 'utility.f90' || echo '$(srcdir)/'`utility.f90

dacf-utility.obj: utility.f90
	$(FC) $(dacf_FCFLAGS) $(FCFLAGS) -c -o dacf-utility.obj `if test -f 'utility.f90'; then $(CYGPATH_W) 'utility.f90'; else $(CYGPATH_W) '$(srcdir)/utility.f90'; fi`

dacf-dacf.o: dacf.f90
	$(FC) $(dacf_FCFLAGS) $(FCFLAGS) -c -o dacf-dacf.o `test -f 'dacf.f90' || echo '$(srcdir)/'`dacf.f90

dacf-dacf.obj: dacf.f90
	$(FC) $(dacf_FCFLAGS) $(FCFLAGS) -c -o dacf-dacf.obj `if test -f 'dacf.f90'; then $(CYGPATH_W) 'dacf.f90'; else $(CYGPATH_W) '$(srcdir)/dacf.f90'; fi`

sq-parse.o: parse.f90
	$(FC) $(sq_FCFLAGS) $(FCFLAGS) -c -o sq-parse.o `test -f 'parse.f90' || echo '$(srcdir)/'`parse.f90

sq-parse.obj: parse.f90
	$(FC) $(sq_FCFLAGS) $(FCFLAGS) -c -o sq-parse.obj `if test -f 'parse.f90'; then $(CYGPATH_W) 'parse.f90'; else $(CYGPATH_W) '$(srcdir)/parse.f90'; fi`

sq-dlprw.o: dlprw.f90
	$(FC) $(sq_FCFLAGS) $(FCFLAGS) -c -o sq-dlprw.o `test -f 'dlprw.f90' || echo '$(srcdir)/'`dlprw.f90

sq-dlprw.obj: dlprw.f90
	$(FC) $(sq_FCFLAGS) $(FCFLAGS) -c -o sq-dlprw.obj `if test -f 'dlprw.f90'; then $(CYGPATH_W) 'dlprw.f90'; else $(CYGPATH_W) '$(srcdir)/dlprw.f90'; fi`

sq-utility.o: utility.f90
	$(FC) $(sq_FCFLAGS) $(FCFLAGS) -c -o sq-utility.o `test -f 'utility.f90' || echo '$(srcdir)/'`utility.f90

sq-utility.obj: utility.f90
	$(FC) $(sq_FCFLAGS) $(FCFLAGS) -c -o sq-utility.obj `if test -f 'utility.f90'; then $(CYGPATH_W) 'utility.f90'; else $(CYGPATH_W) '$(srcdir)/utility.f90'; fi`

sq-sq.o: sq.f90
	$(FC) $(sq_FCFLAGS) $(FCFLAGS) -c -o sq-sq.o `test -f 'sq.f90' || echo '$(srcdir)/'`sq.f90

sq-sq.obj: sq.f90
	$(FC) $(sq_FCFLAGS) $(FCFLAGS) -c -o sq-sq.obj `if test -f 'sq.f90'; then $(CYGPATH_W) 'sq.f90'; else $(CYGPATH_W) '$(srcdir)/sq.f90'; fi`

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

distclean-libtool:
	-rm -f libtool config.lt

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES) config.h.in $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	set x; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS) config.h.in $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES) config.h.in $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	list='$(SOURCES) $(HEADERS) config.h.in $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"

cscope: cscope.files
	test ! -s cscope.files \
	  || $(CSCOPE) -b -q $(AM_CSCOPEFLAGS) $(CSCOPEFLAGS) -i cscope.files $(CSCOPE_ARGS)

clean-cscope:
	-rm -f cscope.files

cscope.files: clean-cscope  cscopelist

cscopelist:  $(HEADERS) $(SOURCES) $(LISP)
	list='$(SOURCES) $(HEADERS) $(LISP)'; \
	case "$(srcdir)" in \
	  [\\/]* | ?:[\\/]*) sdir="$(srcdir)" ;; \
	  *) sdir=$(subdir)/$(srcdir) ;; \
	esac; \
	for i in $$list; do \
	  if test -f "$$i"; then \
	    echo "$(subdir)/$$i"; \
	  else \
	    echo "$$sdir/$$i"; \
	  fi; \
	done >> $(top_builddir)/cscope.files

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags
	-rm -f cscope.out cscope.in.out cscope.po.out cscope.files

distdir: $(DISTFILES)
	$(am__remove_distdir)
	test -d "$(distdir)" || mkdir "$(distdir)"
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
	-test -n "$(am__skip_mode_fix)" \
	|| find "$(distdir)" -type d ! -perm -755 \
		-exec chmod u+rwx,go+rx {} \; -o \
	  ! -type d ! -perm -444 -links 1 -exec chmod a+r {} \; -o \
	  ! -type d ! -perm -400 -exec chmod a+r {} \; -o \
	  ! -type d ! -perm -444 -exec $(install_sh) -c -m a+r {} {} \; \
	|| chmod -R a+r "$(distdir)"
dist-gzip: distdir
	tardir=$(distdir) && $(am__tar) | GZIP=$(GZIP_ENV) gzip -c >$(distdir).tar.gz
	$(am__post_remove_distdir)

dist-bzip2: distdir
	tardir=$(distdir) && $(am__tar) | BZIP2=$${BZIP2--9} bzip2 -c >$(distdir).tar.bz2
	$(am__post_remove_distdir)

dist-lzip: distdir
	tardir=$(distdir) && $(am__tar) | lzip -c $${LZIP_OPT--9} >$(distdir).tar.lz
	$(am__post_remove_distdir)

dist-xz: distdir
	tardir=$(distdir) && $(am__tar) | XZ_OPT=$${XZ_OPT--e} xz -c >$(distdir).tar.xz
	$(am__post_remove_distdir)

dist-tarZ: distdir
	tardir=$(distdir) && $(am__tar) | compress -c >$(distdir).tar.Z
	$(am__post_remove_distdir)

dist-shar: distdir
	shar $(distdir) | GZIP=$(GZIP_ENV) gzip -c >$(distdir).shar.gz
	$(am__post_remove_distdir)

dist-zip: distdir
	-rm -f $(distdir).zip
	zip -rq $(distdir).zip $(distdir)
	$(am__post_remove_distdir)

dist dist-all:
	$(MAKE) $(AM_MAKEFLAGS) $(DIST_TARGETS) am__post_remove_distdir='@:'
	$(am__post_remove_distdir)

# This target untars the dist file and tries a VPATH configuration.  Then
# it guarantees that the distribution is self-contained by making another
# tarfile.
distcheck: dist
	case '$(DIST_ARCHIVES)' in \
	*.tar.gz*) \
	  GZIP=$(GZIP_ENV) gzip -dc $(distdir).tar.gz | $(am__untar) ;;\
	*.tar.bz2*) \
	  bzip2 -dc $(distdir).tar.bz2 | $(am__untar) ;;\
	*.tar.lz*) \
	  lzip -dc $(distdir).tar.lz | $(am__untar) ;;\
	*.tar.xz*) \
	  xz -dc $(distdir).tar.xz | $(am__untar) ;;\
	*.tar.Z*) \
	  uncompress -c $(distdir).tar.Z | $(am__untar) ;;\
	*.shar.gz*) \
	  GZIP=$(GZIP_ENV) gzip -dc $(distdir).shar.gz | unshar ;;\
	*.zip*) \
	  unzip $(distdir).zip ;;\
	esac
	chmod -R a-w $(distdir); chmod a+w $(distdir)
	mkdir $(distdir)/_build
	mkdir $(distdir)/_inst
	chmod a-w $(distdir)
	test -d $(distdir)/_build || exit 0; \
	dc_install_base=`$(am__cd) $(distdir)/_inst && pwd | sed -e 's,^[^:\\/]:[\\/],/,'` \
	  && dc_destdir="$${TMPDIR-/tmp}/am-dc-$$$$/" \
	  && am__cwd=`pwd` \
	  && $(am__cd) $(distdir)/_build \
	  && ../configure --srcdir=.. --prefix="$$dc_install_base" \
	    $(AM_DISTCHECK_CONFIGURE_FLAGS) \
	    $(DISTCHECK_CONFIGURE_FLAGS) \
	  && $(MAKE) $(AM_MAKEFLAGS) \
	  && $(MAKE) $(AM_MAKEFLAGS) dvi \
	  && $(MAKE) $(AM_MAKEFLAGS) check \
	  && $(MAKE) $(AM_MAKEFLAGS) install \
	  && $(MAKE) $(AM_MAKEFLAGS) installcheck \
	  && $(MAKE) $(AM_MAKEFLAGS) uninstall \
	  && $(MAKE) $(AM_MAKEFLAGS) distuninstallcheck_dir="$$dc_install_base" \
	        distuninstallcheck \
	  && chmod -R a-w "$$dc_install_base" \
	  && ({ \
	       (cd ../.. && umask 077 && mkdir "$$dc_destdir") \
	       && $(MAKE) $(AM_MAKEFLAGS) DESTDIR="$$dc_destdir" install \
	       && $(MAKE) $(AM_MAKEFLAGS) DESTDIR="$$dc_destdir" uninstall \
	       && $(MAKE) $(AM_MAKEFLAGS) DESTDIR="$$dc_destdir" \
	            distuninstallcheck_dir="$$dc_destdir" distuninstallcheck; \
	      } || { rm -rf "$$dc_destdir"; exit 1; }) \
	  && rm -rf "$$dc_destdir" \
	  && $(MAKE) $(AM_MAKEFLAGS) dist \
	  && rm -rf $(DIST_ARCHIVES) \
	  && $(MAKE) $(AM_MAKEFLAGS) distcleancheck \
	  && cd "$$am__cwd" \
	  || exit 1
	$(am__post_remove_distdir)
	@(echo "$(distdir) archives ready for distribution: "; \
	  list='$(DIST_ARCHIVES)'; for i in $$list; do echo $$i; done) | \
	  sed -e 1h -e 1s/./=/g -e 1p -e 1x -e '$$p' -e '$$x'
distuninstallcheck:
	@test -n '$(distuninstallcheck_dir)' || { \
	  echo 'ERROR: trying to run $@ with an empty' \
	       '$$(distuninstallcheck_dir)' >&2; \
	  exit 1; \
	}; \
	$(am__cd) '$(distuninstallcheck_dir)' || { \
	  echo 'ERROR: cannot chdir into $(distuninstallcheck_dir)' >&2; \
	  exit 1; \
	}; \
	test `$(am__distuninstallcheck_listfiles) | wc -l` -eq 0 \
	   || { echo "ERROR: files left after uninstall:" ; \
	        if test -n "$(DESTDIR)"; then \
	          echo "  (check DESTDIR support)"; \
	        fi ; \
	        $(distuninstallcheck_listfiles) ; \
	        exit 1; } >&2
distcleancheck: distclean
	@if test '$(srcdir)' = . ; then \
	  echo "ERROR: distcleancheck can only run from a VPATH build" ; \
	  exit 1 ; \
	fi
	@test `$(distcleancheck_listfiles) | wc -l` -eq 0 \
	  || { echo "ERROR: files left in build directory after distclean:" ; \
	       $(distcleancheck_listfiles) ; \
	       exit 1; } >&2
check-am: all-am
check: check-am
all-am: Makefile $(PROGRAMS) config.h
installdirs:
	for dir in "$(DESTDIR)$(bindir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-binPROGRAMS clean-generic clean-libtool mostlyclean-am

distclean: distclean-am
	-rm -f $(am__CONFIG_DISTCLEAN_FILES)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-hdr distclean-libtool distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am:

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am: install-binPROGRAMS

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -f $(am__CONFIG_DISTCLEAN_FILES)
	-rm -rf $(top_srcdir)/autom4te.cache
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-binPROGRAMS

.MAKE: all install-am install-strip

.PHONY: CTAGS GTAGS all all-am am--refresh check check-am clean \
	clean-binPROGRAMS clean-cscope clean-generic clean-libtool \
	cscope cscopelist ctags dist dist-all dist-bzip2 dist-gzip \
	dist-lzip dist-shar dist-tarZ dist-xz dist-zip distcheck \
	distclean distclean-compile distclean-generic distclean-hdr \
	distclean-libtool distclean-tags distcleancheck distdir \
	distuninstallcheck dvi dvi-am html html-am info info-am \
	install install-am install-binPROGRAMS install-data \
	install-data-am install-dvi install-dvi-am install-exec \
	install-exec-am install-html install-html-am install-info \
	install-info-am install-man install-pdf install-pdf-am \
	install-ps install-ps-am install-strip installcheck \
	installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
	tags uninstall uninstall-am uninstall-binPROGRAMS


# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
