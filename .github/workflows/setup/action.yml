name: Set Environment

runs:
  using: "composite"
  steps:

  - name: Set Environment (OSX, because we have to)
    shell: bash
    if: runner.os == 'MacOS'
    run: |
      set -ex
      brew update-reset
      brew install gnu-sed
      VERSION_MAJOR=`grep VERSION_MAJOR ./CMakeLists.txt | gsed 's/set(VERSION_MAJOR "\([0-9]\+\)")/\1/g'`
      VERSION_MINOR=`grep VERSION_MINOR ./CMakeLists.txt | gsed 's/set(VERSION_MINOR "\([0-9]\+\)")/\1/g'`
      VERSION_PATCH=`grep VERSION_PATCH ./CMakeLists.txt | gsed 's/set(VERSION_PATCH "\([0-9]\+\)")/\1/g'`
      DLPUTILSVERSION="${VERSION_MAJOR}.${VERSION_MINOR}.${VERSION_PATCH}"
      echo "dlputilsVersion=${DLPUTILSVERSION}" >> ${GITHUB_ENV}

  - name: Set Environment
    shell: bash
    if: runner.os != 'MacOS'
    run: |
      set -ex
      sed --version
      VERSION_MAJOR=`grep VERSION_MAJOR ./CMakeLists.txt | sed 's/set(VERSION_MAJOR "\([0-9]\+\)")/\1/g'`
      VERSION_MINOR=`grep VERSION_MINOR ./CMakeLists.txt | sed 's/set(VERSION_MINOR "\([0-9]\+\)")/\1/g'`
      VERSION_PATCH=`grep VERSION_PATCH ./CMakeLists.txt | sed 's/set(VERSION_PATCH "\([0-9]\+\)")/\1/g'`
      DLPUTILSVERSION="${VERSION_MAJOR}.${VERSION_MINOR}.${VERSION_PATCH}"
      echo "dlputilsVersion=${DLPUTILSVERSION}" >> ${GITHUB_ENV}

